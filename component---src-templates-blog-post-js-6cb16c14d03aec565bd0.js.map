{"version":3,"sources":["webpack:///./src/assets/images/avatar.png","webpack:///./src/components/Bio.js","webpack:///./src/data/bio.js","webpack:///./src/templates/blog-post.js"],"names":["module","exports","Bio","render","style","display","marginBottom","rhythm","src","profilePic","alt","marginRight","width","height","React","Component","BlogPostTemplate","post","this","props","data","markdownRemark","siteTitle","get","siteDescription","excerpt","pageContext","previous","next","Layout","location","title","Helmet","htmlAttributes","lang","meta","name","content","frontmatter","to","scale","marginTop","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","path","rel","query"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,sD,mPCmC5BC,E,gLAxBbC,OAAA,WACE,OACE,yBACEC,MAAO,CACLC,QAAS,OACTC,aAAcC,YAAO,OAGvB,yBACEC,IAAKC,IACLC,IAAG,cACHN,MAAO,CACLO,YAAaJ,YAAO,IACpBD,aAAc,EACdM,MAAOL,YAAO,GACdM,OAAQN,YAAO,MAGnB,2BC7BE,yD,GDUQO,IAAMC,W,gBEDlBC,E,gLACJb,OAAA,WACE,IAAMc,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYC,IAAIL,KAAKC,MAAO,gCAC5BK,EAAkBP,EAAKQ,QAHtB,EAIoBP,KAAKC,MAAMO,YAA9BC,EAJD,EAICA,SAAUC,EAJX,EAIWA,KAElB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAUZ,KAAKC,MAAMW,SAAUC,MAAOT,GAC5C,kBAACU,EAAA,EAAD,CACEC,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASb,IACvCO,MAAUd,EAAKqB,YAAYP,MAAtB,MAAiCT,IAExC,kBAAC,OAAD,CAAMiB,GAAG,SAAT,UACA,4BAAKtB,EAAKqB,YAAYP,OACtB,6BACA,uBACE3B,MAAK,iBACAoC,aAAM,IADN,CAEHnC,QAAS,QACTC,aAAcC,YAAO,GACrBkC,UAAWlC,aAAQ,MAGpBU,EAAKqB,YAAYI,MAEpB,yBAAKC,wBAAyB,CAAEC,OAAQ3B,EAAK4B,QAC7C,wBACEzC,MAAO,CACLE,aAAcC,YAAO,MAGzB,kBAAC,EAAD,MACA,wBACEH,MAAO,CACLC,QAAS,OACTyC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGtB,GACC,kBAAC,OAAD,CAAMY,GAAIZ,EAASW,YAAYY,KAAMC,IAAI,QAAzC,KACKxB,EAASW,YAAYP,QAI9B,4BACGH,GACC,kBAAC,OAAD,CAAMW,GAAIX,EAAKU,YAAYY,KAAMC,IAAI,QAClCvB,EAAKU,YAAYP,MADpB,U,GApDiBjB,IAAMC,WAiExBqC,GAFEpC,YAEG","file":"component---src-templates-blog-post-js-6cb16c14d03aec565bd0.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/avatar-bc1400996577b06d1cc4c8c43e59241c.png\";","import React from 'react'\n\n// Import typefaces\nimport 'typeface-montserrat'\nimport 'typeface-merriweather'\n\nimport profilePic from './../assets/images/avatar.png'\nimport { rhythm } from '../utils/typography'\nimport bioData from './../data/bio'\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2.5),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Sai Krishna`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n          }}\n        />\n        <p>{bioData}</p>\n      </div>\n    )\n  }\n}\n\nexport default Bio\n","const data = `By Josh Hansen, Data Scientist and Machine Educator`\n\nexport default data\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n        <Link to=\"/blog\">&larr; Blog</Link>\n        <h1>{post.frontmatter.title}</h1>\n        <br />\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: 'block',\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.frontmatter.path} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.frontmatter.path} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}